import React from 'react';
import { imagePath } from '../_env';
import ActionBlock from '../../components/ActionBlock/Loadable';

export const user = {
  list: {
    meta: {
      metaDescription: '',
      metaTitle: 'Users List',
    },
    fieldName: 'user',
    apiUrl: 'select_users',
    tableConfig: {
      header: [
        {
          title: 'User Name',
          prop: 'vUserName',
          sortable: true,
          filterable: true,
        },
        {
          title: 'Name',
          prop: 'vName',
          sortable: true,
          filterable: true,
        },
        {
          title: 'Contact',
          prop: 'vContact',
          sortable: true,
          filterable: true,
        },
        {
          title: 'Photo',
          prop: 'vPhoto',
          sortable: false,
          filterable: true,
          cell: row => (
            <img
              alt=""
              className="image-formatter"
              src={`${imagePath}user/${row.vPhoto}`}
            />
          ),
        },
        {
          title: 'User Type',
          prop: 'eUserType',
          sortable: true,
          filterable: true,
        },
        {
          title: 'Status',
          prop: 'eStatus',
          sortable: true,
          filterable: true,
        },
        {
          title: 'Actions',
          prop: 'customer_actions',
          cell: row => <ActionBlock id={row.iUserId} path="/user" />,
        },
      ],
      onSortFunction: {
        phone(columnValue) {
          return parseInt(columnValue, 10);
        },
      },
      onFilterFunction: () => {},
      customLabels: {
        first: '<<',
        last: '>>',
        prev: '<',
        next: '>',
        show: 'Display',
        entries: 'rows',
        noResults: 'There are no data to be displayed',
      },
      initialSort: { prop: 'vUserName', isAscending: false },
      rowsPerPage: 10,
      classes: { table: 'table-striped table-hover' },
    },
  },
  createEditDelete: {
    meta: {
      metaDescription: '',
      metaTitle: 'Users',
    },
    fieldName: 'user',
    submitApiUrl: 'create_modify_user',
    getApiUrl: 'select_users',
    formConfig: {
      formInfo: [
        {
          id: 'user',
          formType: 'user',
          label: 'Users',
          icon: 'fa fa-users',
          isHeaderInputRequired: false,
          fields: [
            'iUserId',
            'vUserName',
            'vName',
            'vContact',
            'vPhoto',
            'tBio',
            'eUserType',
            'eStatus',
          ],
        },
        {
          id: 'password',
          formType: 'password',
          label: 'Password',
          icon: 'fa fa-users',
          isHeaderInputRequired: false,
          fields: ['tPassword', 'tPasswordRepeat'],
        },
      ],
      formFields: [
        {
          id: 'iUserId',
          fieldName: 'iUserId',
          label: 'User Id',
          inputIcon: '',
          placeHolder: '',
          fieldType: 'hidden',
          validationRules: {},
          validationMessage: '',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'user',
        },
        {
          id: 'vName',
          fieldName: 'vName',
          label: 'Name',
          inputIcon: '',
          placeHolder: 'Name',
          fieldType: 'text',
          validationRules: {
            isRequired: true,
          },
          validationMessage: 'Please Enter Name',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'user',
        },
        {
          id: 'vUserName',
          fieldName: 'vUserName',
          label: 'User Name',
          inputIcon: '',
          placeHolder: 'Please Enter User Name',
          fieldType: 'text',
          validationRules: {
            isRequired: true,
            isEmail: true,
          },
          validationMessageOptions: {
            isRequired: 'Please Enter User Name',
            isEmail: 'User Name must be Email',
          },
          validationMessage: '',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'user',
        },
        {
          id: 'tPassword',
          fieldName: 'tPassword',
          label: 'Password',
          inputIcon: '',
          placeHolder: 'Password',
          fieldType: 'password',
          validationRules: {
            isRequired: true,
            minChar: 8,
            maxChar: 15,
          },
          validationMessageOptions: {
            isRequired: 'Please enter Password',
            minChar: 'Minimum 8 number',
            maxChar: 'Maximum 15 number',
          },
          validationMessage: '',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'password',
        },
        {
          id: 'tPasswordRepeat',
          fieldName: 'tPasswordRepeat',
          label: 'ReType Password',
          inputIcon: '',
          placeHolder: 'ReType Password',
          fieldType: 'password',
          validationRules: {
            equalToField: 'tPassword',
          },
          validationMessage: 'Should Match Password',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'password',
        },
        {
          id: 'vContact',
          fieldName: 'vContact',
          label: 'Contact',
          inputIcon: '',
          placeHolder: 'Contact',
          fieldType: 'text',
          validationRules: {
            isRequired: true,
            patterMatch: '^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$',
            // type: 'number',
            minChar: 10,
            maxChar: 10,
          },
          validationMessageOptions: {
            isRequired: 'Please enter contact number',
            patterMatch: 'Please enter in correct format',
            minChar: 'Minimum 10 number',
            maxChar: 'Maximum 10 number',
          },
          validationMessage: '',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'user',
        },
        {
          id: 'vPhoto',
          fieldName: 'vPhoto',
          label: 'Photo',
          inputIcon: '',
          placeHolder: 'Photo',
          fieldType: 'fileUpload',
          folderName: 'user',
          validationRules: {},
          validationMessage: '',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'user',
        },
        {
          id: 'tBio',
          fieldName: 'tBio',
          label: 'Bio',
          inputIcon: '',
          placeHolder: 'Bio',
          fieldType: 'textarea',
          validationRules: {},
          validationMessage: '',
          col: {
            default: 12,
            md: 12,
            defaultLabel: 4,
            mdLabel: 1,
          },
          formType: 'user',
        },
        {
          id: 'eUserType',
          fieldName: 'eUserType',
          label: 'Status',
          inputIcon: '',
          placeHolder: 'Status',
          fieldType: 'select',
          options: [
            { value: 'ADMIN', label: 'admin' },
            { value: 'INVESTOR', label: 'Investor' },
            { value: 'FRANCHISOR', label: 'Franchisor' },
            { value: 'LOAN_SEEKER', label: 'Loan Seeker' },
            { value: 'GENERAL', label: 'General' },
          ],
          validationRules: {
            isRequired: true,
          },
          validationMessage: 'Please select the franchise status',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'user',
        },
        {
          id: 'eStatus',
          fieldName: 'eStatus',
          label: 'Status',
          inputIcon: '',
          placeHolder: 'Status',
          fieldType: 'select',
          options: [
            { value: 'NEW', label: 'New' },
            { value: 'ACTIVE', label: 'Active' },
            { value: 'INACTIVE', label: 'Inactive' },
          ],
          validationRules: {
            isRequired: true,
          },
          validationMessage: 'Please select the franchise status',
          col: {
            default: 12,
            md: 6,
            defaultLabel: 4,
            mdLabel: 2,
          },
          formType: 'user',
        },
      ],
    },
  },
};
